{"ast":null,"code":"var _jsxFileName = \"/Users/mazen/Help_Desk/frontend/my-react-app/src/components/createTicketComponent.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\n\n//const authToken = Cookies.get('auth_token');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getUserIdFromToken = () => {\n  // Replace this with the correct method to retrieve user ID from the token/cookie\n  const token = Cookies.get('auth_token');\n  if (!token) {\n    return null; // No token found\n  }\n  try {\n    // Parse the token\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\n\n    // Check if the token contains the user ID\n    if (decodedToken && decodedToken.userId) {\n      return decodedToken.userId; // Return the user ID\n    } else {\n      console.error('User ID not found in the token:', decodedToken);\n      return null; // User ID not found in the token\n    }\n  } catch (e) {\n    console.error('Error decoding token:', e);\n    return null; // Error decoding token\n  }\n};\n\n// const parseJwt = (token) => {\n//   try {\n//     return JSON.parse(atob(token.split('.')[1]));\n//   } catch (e) {\n//     return null;\n//   }\n// };\n\nconst TicketForm = () => {\n  _s();\n  const [ticketData, setTicketData] = useState({\n    user: getUserIdFromToken(),\n    // Replace with the correct method to get user ID\n    Category: '',\n    Sub_Category: '',\n    TDescribtion: ''\n  });\n  const [ticketMessage, setTicketMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTicketData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleTicketCreation = async e => {\n    e.preventDefault();\n    try {\n      // Get user ID from the token/cookie\n      const userId = getUserIdFromToken(); // Replace with the correct method to get user ID\n\n      const response = await fetch('http://localhost:3000/Tickets/createTicket', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('auth_token')}`\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ...ticketData,\n          user: userId // Pass the user ID to the server\n        })\n      });\n      if (response.ok) {\n        setTicketMessage('Ticket created successfully');\n      } else {\n        setTicketMessage('Choose a Category/sub Category');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');\n    }\n  };\n  const categoryOptions = ['Hardware', 'Software', 'Network'];\n  const Sub_CategoryOptions = {\n    Hardware: ['Desktops', 'Laptops', 'Printers', 'Servers', 'Networking equipment'],\n    Software: ['Operating system', 'Application software', 'Custom software', 'Integration issues'],\n    Network: ['Email issues', 'Internet connection problems', 'Website errors']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTicketCreation,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Category\",\n          value: ticketData.Category,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), categoryOptions.map(Category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: Category,\n            children: Category\n          }, Category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sub Category:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Sub_Category\",\n          value: ticketData.Sub_Category,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Sub Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), ticketData.Category && Sub_CategoryOptions[ticketData.Category].map(Sub_Category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: Sub_Category,\n            children: Sub_Category\n          }, Sub_Category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"TDescribtion\",\n          value: ticketData.TDescribtion,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), ticketMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ticketMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketForm, \"jm8NB0bOtNtp/y1gLcYmh+cbymk=\");\n_c = TicketForm;\nexport default TicketForm;\nvar _c;\n$RefreshReg$(_c, \"TicketForm\");","map":{"version":3,"names":["React","useState","Cookies","jsxDEV","_jsxDEV","getUserIdFromToken","token","get","decodedToken","JSON","parse","atob","split","userId","console","error","e","TicketForm","_s","ticketData","setTicketData","user","Category","Sub_Category","TDescribtion","ticketMessage","setTicketMessage","handleChange","name","value","target","prevData","handleTicketCreation","preventDefault","response","fetch","method","headers","credentials","body","stringify","ok","categoryOptions","Sub_CategoryOptions","Hardware","Software","Network","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","map","type","_c","$RefreshReg$"],"sources":["/Users/mazen/Help_Desk/frontend/my-react-app/src/components/createTicketComponent.js"],"sourcesContent":["import '../App.css';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\n\n//const authToken = Cookies.get('auth_token');\n\nconst getUserIdFromToken = () => {\n  // Replace this with the correct method to retrieve user ID from the token/cookie\n  const token = Cookies.get('auth_token');\n  \n  if (!token) {\n    return null; // No token found\n  }\n\n  try {\n    // Parse the token\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\n\n    // Check if the token contains the user ID\n    if (decodedToken && decodedToken.userId) {\n      return decodedToken.userId; // Return the user ID\n    } else {\n      console.error('User ID not found in the token:', decodedToken);\n      return null; // User ID not found in the token\n    }\n  } catch (e) {\n    console.error('Error decoding token:', e);\n    return null; // Error decoding token\n  }\n};\n\n// const parseJwt = (token) => {\n//   try {\n//     return JSON.parse(atob(token.split('.')[1]));\n//   } catch (e) {\n//     return null;\n//   }\n// };\n\nconst TicketForm = () => {\n  const [ticketData, setTicketData] = useState({\n    user: getUserIdFromToken(), // Replace with the correct method to get user ID\n    Category: '',\n    Sub_Category: '',\n    TDescribtion: '',\n  });\n\n  const [ticketMessage, setTicketMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setTicketData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleTicketCreation = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Get user ID from the token/cookie\n      const userId = getUserIdFromToken(); // Replace with the correct method to get user ID\n\n      const response = await fetch('http://localhost:3000/Tickets/createTicket', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('auth_token')}`, \n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ...ticketData,\n          user: userId, // Pass the user ID to the server\n        }),\n      });\n\n      if (response.ok) {\n        setTicketMessage('Ticket created successfully');\n      } else {\n        setTicketMessage('Choose a Category/sub Category');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');\n    }\n  };\n\n  \n\n  \n\n  const categoryOptions = ['Hardware', 'Software', 'Network'];\n  const Sub_CategoryOptions = {\n    Hardware: ['Desktops', 'Laptops', 'Printers', 'Servers', 'Networking equipment'],\n    Software: ['Operating system', 'Application software', 'Custom software', 'Integration issues'],\n    Network: ['Email issues', 'Internet connection problems', 'Website errors'],\n  };\n\n  return (\n    <div>\n      <h2>Create a New Ticket</h2>\n      <form onSubmit={handleTicketCreation}>\n        <label>\n          Category:\n          <select\n            name=\"Category\"\n            value={ticketData.Category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>Select a Category</option>\n            {categoryOptions.map((Category) => (\n              <option key={Category} value={Category}>\n                {Category}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <br />\n\n        <label>\n          Sub Category:\n          <select\n            name=\"Sub_Category\"\n            value={ticketData.Sub_Category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>Select a Sub Category</option>\n            {ticketData.Category &&\n              Sub_CategoryOptions[ticketData.Category].map((Sub_Category) => (\n                <option key={Sub_Category} value={Sub_Category}>\n                  {Sub_Category}\n                </option>\n              ))}\n          </select>\n        </label>\n\n        <br />\n\n        <label>\n          Description:\n          <textarea\n            name=\"TDescribtion\"\n            value={ticketData.TDescribtion}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <br />\n\n        <button type=\"submit\">Create Ticket</button>\n      </form>\n      {ticketMessage && <p>{ticketMessage}</p>}\n    </div>\n  );\n};\n\nexport default TicketForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}