{"ast":null,"code":"import'../App.css';import React,{useState,useEffect}from'react';import Cookies from'js-cookie';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TicketForm=()=>{const[ticketData,setTicketData]=useState({Category:'',Sub_Category:'',TDescribtion:''});const[ticketMessage,setTicketMessage]=useState('');const[userId,setUserId]=useState('');useEffect(()=>{// Load the user ID from the cookie on component mount\nconst storedUserId=Cookies.get('user_id');console.log('Stored User ID:',storedUserId);setUserId(storedUserId);},[]);// The empty dependency array ensures this effect runs once on component mount\nconst handleChange=e=>{const{name,value}=e.target;setTicketData(prevData=>({...prevData,[name]:value}));};const handleTicketCreation=async e=>{e.preventDefault();try{if(!userId){setTicketMessage('User ID not found. Please log in.');return;}const userToken=Cookies.get('token');console.log('User Token:',userToken);if(!userToken){setTicketMessage('User token not found. Please log in.');return;}const response=await fetch('http://localhost:3000/api/v1/Tickets/createTicket',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(userToken)},body:JSON.stringify({agent:\"65885fe2013e494ebbfd9d8d\",Category:ticketData.Category,Sub_Category:ticketData.Sub_Category,Priority:'Medium',Status:'open',TDescribtion:ticketData.TDescribtion,userRate:3}),credentials:'include'// Ensure this line is present\n});if(response.status===201){const result=await response.json();console.log('Ticket created successfully:',result);setTicketMessage('Ticket created successfully');}else{console.log('Error creating ticket:',response.status);setTicketMessage('Error creating ticket. Please try again.');}}catch(error){console.error('Error:',error);setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');}};////////////////////////////////////////////////////////////////Notifications///////////////////////////////// \n/*   const Notification = async (e) => {\n    e.preventDefault();\n    try {\n      if (!userId) {\n        setTicketMessage('User ID not found. Please log in.');\n        return;\n      }\n  \n      const userToken = Cookies.get('token');\n      console.log('User Token:', userToken);\n      if (!userToken) {\n        setTicketMessage('User token not found. Please log in.');\n        return;\n      }\n  \n      const response = await fetch('http://localhost:3000/api/v1/Notifi/submit-ticket',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userToken}`,\n        },\n        credentials: 'include', // Ensure this line is present\n      });\n      if (response.status === 201) {\n        const result = await response.json();\n        console.log('Ticket created successfully:', result);\n        setTicketMessage('Ticket created successfully');\n      } else {\n        console.log('Error creating ticket:', response.status);\n        setTicketMessage('Error creating ticket. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');\n    }\n  };\n  */const categoryOptions=['Hardware','Software','Network'];const Sub_CategoryOptions={Hardware:['Desktops','Laptops','Printers','Servers','Networking equipment'],Software:['Operating system','Application software','Custom software','Integration issues'],Network:['Email issues','Internet connection problems','Website errors']};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create a New Ticket\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTicketCreation,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Category:\",/*#__PURE__*/_jsxs(\"select\",{name:\"Category\",value:ticketData.Category,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a Category\"}),categoryOptions.map(Category=>/*#__PURE__*/_jsx(\"option\",{value:Category,children:Category},Category))]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Sub Category:\",/*#__PURE__*/_jsxs(\"select\",{name:\"Sub_Category\",value:ticketData.Sub_Category,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a Sub Category\"}),ticketData.Category&&Sub_CategoryOptions[ticketData.Category].map(Sub_Category=>/*#__PURE__*/_jsx(\"option\",{value:Sub_Category,children:Sub_Category},Sub_Category))]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"TDescribtion\",value:ticketData.TDescribtion,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Ticket\"})]}),ticketMessage&&/*#__PURE__*/_jsx(\"p\",{children:ticketMessage})]});};export default TicketForm;","map":{"version":3,"names":["React","useState","useEffect","Cookies","jsx","_jsx","jsxs","_jsxs","TicketForm","ticketData","setTicketData","Category","Sub_Category","TDescribtion","ticketMessage","setTicketMessage","userId","setUserId","storedUserId","get","console","log","handleChange","e","name","value","target","prevData","handleTicketCreation","preventDefault","userToken","response","fetch","method","headers","concat","body","JSON","stringify","agent","Priority","Status","userRate","credentials","status","result","json","error","categoryOptions","Sub_CategoryOptions","Hardware","Software","Network","children","onSubmit","onChange","required","disabled","map","type"],"sources":["/Users/mazen/Help_Desk/frontend/my-react-app/src/components/TicketForm.js"],"sourcesContent":["import '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\n\nconst TicketForm = () => {\n  const [ticketData, setTicketData] = useState({\n    Category: '',\n    Sub_Category: '',\n    TDescribtion: '',\n  });\n\n  const [ticketMessage, setTicketMessage] = useState('');\n  const [userId, setUserId] = useState('');\n\n  useEffect(() => {\n    // Load the user ID from the cookie on component mount\n    const storedUserId = Cookies.get('user_id');\n    console.log('Stored User ID:', storedUserId);\n    setUserId(storedUserId);\n  }, []); // The empty dependency array ensures this effect runs once on component mount\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setTicketData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n  const handleTicketCreation = async (e) => {\n    e.preventDefault();\n    try {\n      if (!userId) {\n        setTicketMessage('User ID not found. Please log in.');\n        return;\n      }\n  \n      const userToken = Cookies.get('token');\n      console.log('User Token:', userToken);\n      if (!userToken) {\n        setTicketMessage('User token not found. Please log in.');\n        return;\n      }\n  \n      const response = await fetch('http://localhost:3000/api/v1/Tickets/createTicket',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userToken}`,\n        },\n        body: JSON.stringify({\n          agent: \"65885fe2013e494ebbfd9d8d\",\n          Category: ticketData.Category,\n          Sub_Category: ticketData.Sub_Category,\n          Priority: 'Medium',\n          Status: 'open',\n          TDescribtion: ticketData.TDescribtion,\n          userRate: 3,\n        }),\n        credentials: 'include', // Ensure this line is present\n      });\n      if (response.status === 201) {\n        const result = await response.json();\n        console.log('Ticket created successfully:', result);\n        setTicketMessage('Ticket created successfully');\n      } else {\n        console.log('Error creating ticket:', response.status);\n        setTicketMessage('Error creating ticket. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');\n    }\n  };\n\n////////////////////////////////////////////////////////////////Notifications///////////////////////////////// \n/*   const Notification = async (e) => {\n    e.preventDefault();\n    try {\n      if (!userId) {\n        setTicketMessage('User ID not found. Please log in.');\n        return;\n      }\n  \n      const userToken = Cookies.get('token');\n      console.log('User Token:', userToken);\n      if (!userToken) {\n        setTicketMessage('User token not found. Please log in.');\n        return;\n      }\n  \n      const response = await fetch('http://localhost:3000/api/v1/Notifi/submit-ticket',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userToken}`,\n        },\n        credentials: 'include', // Ensure this line is present\n      });\n      if (response.status === 201) {\n        const result = await response.json();\n        console.log('Ticket created successfully:', result);\n        setTicketMessage('Ticket created successfully');\n      } else {\n        console.log('Error creating ticket:', response.status);\n        setTicketMessage('Error creating ticket. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setTicketMessage('An error occurred during the process of creating a ticket. Please try again.');\n    }\n  };\n  */\n  \n  const categoryOptions = ['Hardware', 'Software', 'Network'];\n  const Sub_CategoryOptions = {\n    Hardware: ['Desktops', 'Laptops', 'Printers', 'Servers', 'Networking equipment'],\n    Software: ['Operating system', 'Application software', 'Custom software', 'Integration issues'],\n    Network: ['Email issues', 'Internet connection problems', 'Website errors'],\n  };\n\n  return (\n    <div>\n      <h2>Create a New Ticket</h2>\n      <form onSubmit={handleTicketCreation}>\n        <label>\n          Category:\n          <select\n            name=\"Category\"\n            value={ticketData.Category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>Select a Category</option>\n            {categoryOptions.map((Category) => (\n              <option key={Category} value={Category}>\n                {Category}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <br />\n\n        <label>\n          Sub Category:\n          <select\n            name=\"Sub_Category\"\n            value={ticketData.Sub_Category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>Select a Sub Category</option>\n            {ticketData.Category &&\n              Sub_CategoryOptions[ticketData.Category].map((Sub_Category) => (\n                <option key={Sub_Category} value={Sub_Category}>\n                  {Sub_Category}\n                </option>\n              ))}\n          </select>\n        </label>\n\n        <br />\n\n        <label>\n          Description:\n          <textarea\n            name=\"TDescribtion\"\n            value={ticketData.TDescribtion}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <br />\n\n        <button type=\"submit\">Create Ticket</button>\n      </form>\n      {ticketMessage && <p>{ticketMessage}</p>}\n    </div>\n  );\n};\n\nexport default TicketForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}