{"ast":null,"code":"var _jsxFileName = \"/Users/mazen/Help_Desk/frontend/my-react-app/src/components/TicketByUserId.js\",\n  _s = $RefreshSig$();\n// TicketByUserId.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketByUserId = () => {\n  _s();\n  const {\n    _id\n  } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/Tickets/getTicketsByUserId/${_id}`, {\n          headers: {\n            'Accept': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        console.error('Error fetching tickets:', error);\n      }\n    };\n    fetchTickets();\n  }, [_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Tickets by User ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), tickets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", ticket.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", ticket.Category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sub Category: \", ticket.Sub_Category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", ticket.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", ticket.TDescribtion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, ticket._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tickets found for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/view-ticket'),\n      children: \"Back to All Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketByUserId, \"XKSqxHAMWqZs99/ZR09J8nTuGgw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TicketByUserId;\nexport default TicketByUserId;\nvar _c;\n$RefreshReg$(_c, \"TicketByUserId\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","TicketByUserId","_s","_id","tickets","setTickets","navigate","fetchTickets","response","fetch","headers","credentials","ok","Error","status","data","json","error","console","children","id","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ticket","user","Category","Sub_Category","Status","TDescribtion","onClick","_c","$RefreshReg$"],"sources":["/Users/mazen/Help_Desk/frontend/my-react-app/src/components/TicketByUserId.js"],"sourcesContent":["// TicketByUserId.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst TicketByUserId = () => {\n  const { _id } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/Tickets/getTicketsByUserId/${_id}`, {\n          headers: {\n            'Accept': 'application/json',\n          },\n          credentials: 'include',\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        console.error('Error fetching tickets:', error);\n      }\n    };\n\n    fetchTickets();\n  }, [_id]);\n\n  return (\n    <div>\n      <h1>Tickets by User ID: {id}</h1>\n      {tickets.length > 0 ? (\n        <ul>\n          {tickets.map((ticket) => (\n            <li key={ticket._id}>\n              <p>User ID: {ticket.user}</p>\n              <p>Category: {ticket.Category}</p>\n              <p>Sub Category: {ticket.Sub_Category}</p>\n              <p>Status: {ticket.Status}</p>\n              <p>Description: {ticket.TDescribtion}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tickets found for this user.</p>\n      )}\n      <button onClick={() => navigate('/view-ticket')}>Back to All Tickets</button>\n    </div>\n  );\n};\n\nexport default TicketByUserId;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}